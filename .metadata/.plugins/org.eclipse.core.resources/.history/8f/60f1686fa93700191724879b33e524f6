package edu.etu.web.server;

import edu.etu.web.client.GreetingService;
import edu.etu.web.shared.Customer;
import edu.etu.web.shared.FieldVerifier;

import java.util.List;

import com.gargoylesoftware.htmlunit.javascript.host.Map;
import com.google.gwt.user.server.rpc.RemoteServiceServlet;

/**
 * The server-side implementation of the RPC service.
 */
@SuppressWarnings("serial")
public class GreetingServiceImpl extends RemoteServiceServlet implements GreetingService {
	private Map<String, List<Customer>> db = null;
	public String greetServer(String input) throws IllegalArgumentException {
		// Verify that the input is valid. 
		if (!FieldVerifier.isValidName(input)) {
			// If the input is not valid, throw an IllegalArgumentException back to
			// the client.
			throw new IllegalArgumentException("Name must be at least 4 characters long");
		}

		String serverInfo = getServletContext().getServerInfo();
		String userAgent = getThreadLocalRequest().getHeader("User-Agent");

		// Escape data from the client to avoid cross-site script vulnerabilities.
		input = escapeHtml(input);
		userAgent = escapeHtml(userAgent);

		return "Hello, " + input + "!<br><br>I am running " + serverInfo + ".<br><br>It looks like you are using:<br>"
				+ userAgent;
	}

	/**
	 * Escape an html string. Escaping data received from the client helps to
	 * prevent cross-site script vulnerabilities.
	 * 
	 * @param html the html string to escape
	 * @return the escaped string
	 */
	private String escapeHtml(String html) {
		if (html == null) {
			return null;
		}
		return html.replaceAll("&", "&amp;").replaceAll("<", "&lt;").replaceAll(">", "&gt;");
	}

	@Override
	public List<String> getReaderList() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public List<Customer> getBookReaderList(String readerFIO) {
		// TODO Auto-generated method stub
		return null;
	}
	
	private void initDB(){
		db = new HashMap<String, List<BookReader>>();
		List<BookReader> entries1 = new ArrayList<BookReader>();
		entries1.add(new BookReader("Достоевский", "Игрок", true));
		entries1.add(new BookReader("Толстой", "Анна Каренина", true));
		entries1.add(new BookReader("Достоевский", "Идиот", false));
		db.put("Иванов И. И.", entries1);
		List<BookReader> entries2 = new ArrayList<BookReader>();
		entries2.add(new BookReader("Толстой", "Анна Каренина", false));
		entries2.add(new BookReader("Достоевский", "Игрок", true));
		db.put("Петров П.П.", entries2);
		List<BookReader> entries3 = new ArrayList<BookReader>();
		entries3.add(new BookReader("Толстой", "Анна Каренина", false));
		entries3.add(new BookReader("Булгаков", "Белая гвардия", true));
		db.put("Кац И.М.", entries3);
	}
}
